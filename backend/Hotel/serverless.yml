org: ${env:ORG}
service: hotel-api

provider:
  name: aws
  runtime: python3.9
  iam:
    role: ${env:LAB_ROLE}
  memorySize: 1024
  timeout: 30
  environment:
    TABLE_HOTELS: ${sls:stage}-hotel-hotels
    INDEXLSI1_HOTELS: tenant-name-index
    INDEXGSI1_HOTELS: hotel_location-index
    SERVICE_NAME: hotel-api
    STAGE: ${sls:stage}

functions:
  hotel_create:
    handler: createHotel.lambda_handler
    events:
      - http:
          path: /hotel/create
          method: post
          cors: true
          integration: lambda
    documentation:
      summary: "Crear un nuevo hotel"
      description: "Endpoint para crear un nuevo hotel"
      requestBody:
        description: "Información del hotel"
        content:
          application/json:
            schema:
              type: object
              properties:
                hotel_name:
                  type: string
                hotel_location:
                  type: string
                tenant_id:
                  type: string
      responses:
        '200':
          description: "Hotel creado exitosamente"
        '400':
          description: "Error en la solicitud"

  hotel_read:
    handler: readHotel.lambda_handler
    events:
      - http:
          path: /hotel/{tenant_id}/{hotel_id}
          method: get
          cors: true
          integration: lambda
    documentation:
      summary: "Obtener un hotel por ID"
      description: "Endpoint para obtener la información de un hotel especificado por tenant_id y hotel_id"
      parameters:
        - name: tenant_id
          in: path
          required: true
          schema:
            type: string
        - name: hotel_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Hotel encontrado"
        '404':
          description: "Hotel no encontrado"

  # Añadir la documentación para el resto de las funciones de manera similar.

resources:
  Resources:
    HotelsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_HOTELS}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: hotel_id
            AttributeType: S
          - AttributeName: hotel_name
            AttributeType: S
          - AttributeName: hotel_location
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: hotel_id
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: ${self:provider.environment.INDEXLSI1_HOTELS}
            KeySchema:
              - AttributeName: tenant_id
                KeyType: HASH
              - AttributeName: hotel_name
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.INDEXGSI1_HOTELS}
            KeySchema:
              - AttributeName: hotel_location
                KeyType: HASH
              - AttributeName: tenant_id
                KeyType: RANGE 
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true

plugins:
  - serverless-openapi-documentation

custom:
  openapi:
    info:
      title: "Hotel API"
      description: "API para gestionar hoteles"
      version: "1.0.0"
    servers:
      - url: "https://{stage}.api.yourdomain.com"
        description: "Servidor de producción"
    paths:
      /hotel/create:
        post:
          summary: "Crear un nuevo hotel"
          description: "Endpoint para crear un nuevo hotel"
          responses:
            '200':
              description: "Hotel creado exitosamente"
            '400':
              description: "Error en la solicitud"
      /hotel/{tenant_id}/{hotel_id}:
        get:
          summary: "Obtener un hotel por ID"
          description: "Obtener detalles de un hotel por tenant_id y hotel_id"
          responses:
            '200':
              description: "Hotel encontrado"
            '404':
              description: "Hotel no encontrado"

# Añadir configuración OpenAPI para más endpoints según sea necesario.